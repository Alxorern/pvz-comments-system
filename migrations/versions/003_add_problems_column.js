const sqlite3 = require('sqlite3').verbose();

/**
 * –ú–∏–≥—Ä–∞—Ü–∏—è 003: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ problems –≤ —Ç–∞–±–ª–∏—Ü—É pvz
 * –î–∞—Ç–∞: 2024-01-XX
 * –û–ø–∏—Å–∞–Ω–∏–µ: –î–æ–±–∞–≤–ª—è–µ—Ç —Å—Ç–æ–ª–±–µ—Ü problems –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –ü–í–ó
 */

async function up(db) {
    return new Promise((resolve, reject) => {
        console.log('üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ 003: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ problems –≤ —Ç–∞–±–ª–∏—Ü—É pvz...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–∞–±–ª–∏—Ü–∞ pvz
        db.all("SELECT name FROM sqlite_master WHERE type='table' AND name='pvz'", (err, tables) => {
            if (err) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ã pvz:', err);
                reject(err);
                return;
            }
            
            if (tables.length === 0) {
                console.log('‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ pvz –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ problems');
                resolve();
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—Ç–æ–ª–±–µ—Ü problems
            db.all("PRAGMA table_info(pvz)", (err, columns) => {
                if (err) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã pvz:', err);
                    reject(err);
                    return;
                }
            
            const hasProblemsColumn = columns.some(col => col.name === 'problems');
            
            if (hasProblemsColumn) {
                console.log('‚úÖ –°—Ç–æ–ª–±–µ—Ü problems —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ pvz');
                resolve();
                return;
            }
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü problems
            db.run(`
                ALTER TABLE pvz 
                ADD COLUMN problems TEXT DEFAULT NULL
            `, (err) => {
                if (err) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç–æ–ª–±—Ü–∞ problems:', err);
                    reject(err);
                } else {
                    console.log('‚úÖ –°—Ç–æ–ª–±–µ—Ü problems —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü—É pvz');
                    resolve();
                }
            });
            });
        });
    });
}

async function down(db) {
    return new Promise((resolve, reject) => {
        console.log('üîÑ –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ 003: –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ problems –∏–∑ —Ç–∞–±–ª–∏—Ü—ã pvz...');
        
        // SQLite –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç DROP COLUMN –≤ —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏—è—Ö
        // –ü–æ—ç—Ç–æ–º—É –º—ã –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º, —á—Ç–æ –æ—Ç–∫–∞—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
        console.log('‚ö†Ô∏è –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ 003 –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è (SQLite –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è)');
        console.log('üí° –î–ª—è –æ—Ç–∫–∞—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É pvz –±–µ–∑ —Å—Ç–æ–ª–±—Ü–∞ problems');
        resolve();
    });
}

module.exports = {
    version: '003',
    description: '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ problems –≤ —Ç–∞–±–ª–∏—Ü—É pvz',
    up,
    down
};
