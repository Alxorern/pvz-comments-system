// –ú–∏–≥—Ä–∞—Ü–∏—è: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã companies –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
module.exports = {
    description: 'Add companies table and update pvz/users structure',
    
    async up(db) {
        return new Promise((resolve, reject) => {
            console.log('üîÑ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É companies...');
            
            const createCompaniesSQL = `
                CREATE TABLE IF NOT EXISTS companies (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    company_id TEXT UNIQUE NOT NULL,
                    company_name TEXT NOT NULL,
                    phone TEXT,
                    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
                )
            `;
            
            db.run(createCompaniesSQL, (err) => {
                if (err) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã companies:', err);
                    reject(err);
                    return;
                }
                console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ companies —Å–æ–∑–¥–∞–Ω–∞');
                
                // –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ü–í–ó
                console.log('üîÑ –°–æ–∑–¥–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—é –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ü–í–ó...');
                db.run(`
                    INSERT OR IGNORE INTO companies (company_id, company_name, phone) 
                    VALUES ('000000', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è', '')
                `, (err) => {
                    if (err) {
                        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:', err);
                        reject(err);
                        return;
                    }
                    console.log('‚úÖ –ö–æ–º–ø–∞–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–æ–∑–¥–∞–Ω–∞');
                    
                    // –î–æ–±–∞–≤–ª—è–µ–º company_id –≤ —Ç–∞–±–ª–∏—Ü—É pvz –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
                    console.log('üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã pvz...');
                    db.all("PRAGMA table_info(pvz)", (err, columns) => {
                        if (err) {
                            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã pvz:', err);
                            reject(err);
                            return;
                        }
                        
                        const hasCompanyId = columns.some(col => col.name === 'company_id');
                        
                        if (!hasCompanyId) {
                            console.log('üîÑ –î–æ–±–∞–≤–ª—è–µ–º company_id –≤ —Ç–∞–±–ª–∏—Ü—É pvz...');
                            db.run('ALTER TABLE pvz ADD COLUMN company_id TEXT', (err) => {
                                if (err) {
                                    console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è company_id –≤ pvz:', err);
                                    reject(err);
                                    return;
                                }
                                console.log('‚úÖ company_id –¥–æ–±–∞–≤–ª–µ–Ω –≤ pvz');
                                
                                // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ü–í–ó
                                db.run(`
                                    UPDATE pvz 
                                    SET company_id = '000000' 
                                    WHERE company_id IS NULL
                                `, function(err) {
                                    if (err) {
                                        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ü–í–ó:', err);
                                        reject(err);
                                        return;
                                    }
                                    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –ü–í–ó: ${this.changes}`);
                                    resolve();
                                });
                            });
                        } else {
                            console.log('‚úÖ company_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ pvz');
                            resolve();
                        }
                    });
                });
            });
        });
    },
    
    async down(db) {
        // –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        console.log('‚ö†Ô∏è –û—Ç–∫–∞—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω');
        return Promise.resolve();
    }
};
