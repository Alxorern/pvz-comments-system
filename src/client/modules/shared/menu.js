// –ú–æ–¥—É–ª—å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–µ–Ω—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class MenuManager {
    constructor() {
        this.api = window.secureApiClient;
        this.menuItems = {
            'pvz': { url: '/pvz', text: '–°–ø–∏—Å–æ–∫ –ü–í–ó', icon: 'üì¶' },
            'analytics': { url: '/analytics', text: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞', icon: 'üìä' },
            'companies': { url: '/companies', text: '–ö–æ–º–ø–∞–Ω–∏–∏', icon: 'üè¢' },
            'users': { url: '/users', text: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', icon: 'üë•' },
            'roles': { url: '/roles', text: '–†–æ–ª–∏', icon: 'üîê' },
            'settings': { url: '/settings', text: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', icon: '‚öôÔ∏è' }
        };
    }

    async init() {
        try {
            console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω—é...');
            
            // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –ø—É–Ω–∫—Ç–∞–º–∏ –º–µ–Ω—é
            const response = await this.api.get('/api/auth/user-info');
            
            if (response && response.success && response.user) {
                // API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç { success: true, user: {...} }
                const user = response.user;
                console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', user.login, '–†–æ–ª—å:', user.role);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                this.updateUserInfo(user);
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤
                if (response.menuItems && Array.isArray(response.menuItems)) {
                    console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é:', response.menuItems);
                    this.updateMenu(response.menuItems);
                } else {
                    console.log('üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é');
                    this.showAllMenuItems();
                }
            } else {
                console.warn('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω');
                this.showAllMenuItems(); // Fallback - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø—É–Ω–∫—Ç—ã
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–µ–Ω—é:', error);
            this.showAllMenuItems(); // Fallback - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø—É–Ω–∫—Ç—ã
        }
    }

    updateMenu(availableItems) {
        console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é —Å –ø—É–Ω–∫—Ç–∞–º–∏:', availableItems);
        
        // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        const navContainers = document.querySelectorAll('.sidebar-nav, .nav');
        
        navContainers.forEach(container => {
            // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é (–∫–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ —Ç–µ–ø–µ—Ä—å –≤ sidebar-bottom)
            const allMenuItems = container.querySelectorAll('.nav-item');
            
            // –°–∫—Ä—ã–≤–∞–µ–º/–ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É–Ω–∫—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
            allMenuItems.forEach(menuItem => {
                const href = menuItem.getAttribute('href');
                const isAvailable = availableItems.some(itemKey => {
                    const item = this.menuItems[itemKey];
                    return item && item.url === href;
                });
                
                if (isAvailable) {
                    menuItem.style.display = '';
                    console.log('‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É–Ω–∫—Ç –º–µ–Ω—é:', href);
                } else {
                    menuItem.style.display = 'none';
                    console.log('‚ùå –°–∫—Ä—ã–≤–∞–µ–º –ø—É–Ω–∫—Ç –º–µ–Ω—é:', href);
                }
            });
        });
    }

    updateUserInfo(user) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
        const userInfoElements = document.querySelectorAll('#userInfo, .user-info');
        userInfoElements.forEach(element => {
            const userNameEl = element.querySelector('.user-name');
            const userRoleEl = element.querySelector('.user-role');
            
            if (userNameEl) {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º login –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
                userNameEl.textContent = user.login || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
            }
            if (userRoleEl) {
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º full_name –≤–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–µ
                userRoleEl.textContent = user.full_name || '–ò–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ';
            }
        });
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º NavigationModule –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–æ–ª–∏
        if (window.navigationModule && window.navigationModule.updateUserRole) {
            window.navigationModule.updateUserRole(user.role);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ localStorage
     */
    updateUserInfoFromStorage() {
        // –ë–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º localStorage –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        // –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–∞–µ–º —á–µ—Ä–µ–∑ API —Å httpOnly cookies
        console.log('üîí –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —á–µ—Ä–µ–∑ httpOnly cookies, localStorage –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è');
    }

    showAllMenuItems() {
        // Fallback - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é
        console.log('üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é (fallback)');
        const navContainers = document.querySelectorAll('.sidebar-nav, .nav');
        
        navContainers.forEach(container => {
            const allMenuItems = container.querySelectorAll('.nav-item:not(#btnLogout)');
            allMenuItems.forEach(menuItem => {
                menuItem.style.display = '';
            });
        });
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–µ–Ω—é –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    static async initForPage() {
        const menuManager = new MenuManager();
        await menuManager.init();
        return menuManager;
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.MenuManager = MenuManager;
