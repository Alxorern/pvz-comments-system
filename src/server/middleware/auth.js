const jwt = require('jsonwebtoken');

// JWT —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è)
const JWT_SECRET = 'billing-system-secret-key-2025';
const JWT_EXPIRES_IN = '12h';

/**
 * Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ JWT —Ç–æ–∫–µ–Ω–∞ –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤
 */
function authenticateToken(req, res, next) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization: Bearer (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –¥–ª—è Yandex Cloud)
  const authHeader = req.headers['authorization'];
  const token = authHeader && authHeader.split(' ')[1];

  console.log('üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è API –∑–∞–ø—Ä–æ—Å–∞:', {
    url: req.url,
    method: req.method,
    hasAuthHeader: !!authHeader,
    tokenPreview: token ? token.substring(0, 20) + '...' : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
  });

  if (!token) {
    console.log('‚ùå –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
    return res.status(401).json({ error: 'Access token required' });
  }

  jwt.verify(token, JWT_SECRET, (err, user) => {
    if (err) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞:', err.message);
      return res.status(403).json({ error: 'Invalid or expired token' });
    }
    console.log('‚úÖ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.login);
    req.user = user;
    next();
  });
}

/**
 * Middleware –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü (—Å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º)
 * –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –±–µ–∑ —Ç–æ–∫–µ–Ω–∞, –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π JS –ø—Ä–æ–≤–µ—Ä–∏—Ç —Ç–æ–∫–µ–Ω –∏–∑ localStorage
 */
function authenticatePage(req, res, next) {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ Authorization
  const authHeader = req.headers['authorization'];
  const token = authHeader && authHeader.split(' ')[1];
  
  // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤ query –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
  const queryToken = req.query.token;
  
  const finalToken = token || queryToken;

  if (!finalToken) {
    // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç, –ø–æ–∑–≤–æ–ª—è–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
    // –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π JavaScript –ø—Ä–æ–≤–µ—Ä–∏—Ç —Ç–æ–∫–µ–Ω –∏–∑ localStorage
    console.log('‚ö†Ô∏è –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞–ø—Ä–æ—Å–µ, –ø–æ–∑–≤–æ–ª—è–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ localStorage');
    req.user = null; // –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    return next();
  }

  jwt.verify(finalToken, JWT_SECRET, (err, user) => {
    if (err) {
      // –ï—Å–ª–∏ —Ç–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –ø–æ–∑–≤–æ–ª—è–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
      // –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π JavaScript –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç –Ω–∞ –ª–æ–≥–∏–Ω
      console.log('‚ö†Ô∏è –¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω, –ø–æ–∑–≤–æ–ª—è–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏');
      req.user = null;
      return next();
    }
    console.log('‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.login);
    req.user = user;
    next();
  });
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç JWT —Ç–æ–∫–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function generateToken(user) {
  return jwt.sign(
    { 
      id: user.id,
      login: user.login, 
      role: user.role, 
      full_name: user.full_name 
    },
    JWT_SECRET,
    { expiresIn: JWT_EXPIRES_IN }
  );
}

module.exports = {
  authenticateToken,
  authenticatePage,
  generateToken,
  JWT_SECRET,
  JWT_EXPIRES_IN
};
