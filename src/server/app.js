const express = require('express');
const path = require('path');
const cors = require('cors');
const helmet = require('helmet');
const rateLimit = require('express-rate-limit');
const cookieParser = require('cookie-parser');
const database = require('./database/db');
const { authenticatePage } = require('./middleware/auth');
const { addMenuPermissions } = require('./middleware/roles');
const { sanitizeInput } = require('./middleware/validation');

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
const authRoutes = require('./routes/auth');
const usersRoutes = require('./routes/users');
const rolesRoutes = require('./routes/roles');
const settingsRoutes = require('./routes/settings');
const dataRoutes = require('./routes/data');
const companiesRoutes = require('./routes/companies');
const auditRoutes = require('./routes/audit');

const app = express();

// Trust proxy for Railway
app.set('trust proxy', 1);

// Security Headers
app.use(helmet({
  contentSecurityPolicy: {
    directives: {
      defaultSrc: ["'self'"],
      styleSrc: ["'self'", "'unsafe-inline'"],
      scriptSrc: ["'self'", "'unsafe-inline'"],
      imgSrc: ["'self'", "data:", "https:"],
      connectSrc: ["'self'"],
      fontSrc: ["'self'"],
      objectSrc: ["'none'"],
      mediaSrc: ["'self'"],
      frameSrc: ["'none'"],
    },
  },
  hsts: {
    maxAge: 31536000,
    includeSubDomains: true,
    preload: true
  },
  xssFilter: true,
  noSniff: true,
  frameguard: { action: 'deny' }
}));

// Rate Limiting
const generalLimiter = rateLimit({
  windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
  max: 100000, // –º–∞–∫—Å–∏–º—É–º 100,000 –∑–∞–ø—Ä–æ—Å–æ–≤ (—É–≤–µ–ª–∏—á–µ–Ω–æ –≤ 100 —Ä–∞–∑)
  message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
  standardHeaders: true,
  legacyHeaders: false,
});

const authLimiter = rateLimit({
  windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
  max: 1000, // –º–∞–∫—Å–∏–º—É–º 1000 –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞ (—É–≤–µ–ª–∏—á–µ–Ω–æ –≤ 100 —Ä–∞–∑)
  message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
  standardHeaders: true,
  legacyHeaders: false,
});

// –ë–æ–ª–µ–µ –º—è–≥–∫–∏–π –ª–∏–º–∏—Ç –¥–ª—è API endpoints
const apiLimiter = rateLimit({
  windowMs: 15 * 60 * 1000, // 15 –º–∏–Ω—É—Ç
  max: 50000, // –º–∞–∫—Å–∏–º—É–º 50,000 –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è API (—É–≤–µ–ª–∏—á–µ–Ω–æ –≤ 100 —Ä–∞–∑)
  message: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ API –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ',
  standardHeaders: true,
  legacyHeaders: false,
});

app.use(generalLimiter);

// CORS Security
const allowedOrigins = process.env.ALLOWED_ORIGINS?.split(',') || ['http://localhost:3000'];

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ–º Railway –¥–æ–º–µ–Ω—ã
if (process.env.RAILWAY_STATIC_URL) {
  allowedOrigins.push(process.env.RAILWAY_STATIC_URL);
}
if (process.env.RAILWAY_PUBLIC_DOMAIN) {
  allowedOrigins.push(`https://${process.env.RAILWAY_PUBLIC_DOMAIN}`);
}

console.log('üåê –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ CORS origins:', allowedOrigins);

app.use(cors({
  origin: function (origin, callback) {
    // –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –±–µ–∑ origin (–Ω–∞–ø—Ä–∏–º–µ—Ä, Postman, –º–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
    if (!origin) {
      return callback(null, true);
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ origin –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
    if (allowedOrigins.includes(origin) || allowedOrigins.includes('*')) {
      return callback(null, true);
    }
    
    // –î–ª—è Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑—Ä–µ—à–∞–µ–º –ø–æ–¥–¥–æ–º–µ–Ω—ã railway.app
    if (origin.includes('.railway.app')) {
      return callback(null, true);
    }
    
    console.log('‚ùå CORS –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–ª—è origin:', origin);
    callback(new Error('Not allowed by CORS'));
  },
  credentials: true,
  optionsSuccessStatus: 200
}));

// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ JSON —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏
app.use(express.json({ limit: '10mb' }));
app.use(express.urlencoded({ extended: true, limit: '10mb' }));

// Cookie parser –¥–ª—è httpOnly cookies
app.use(cookieParser());

// XSS Protection
app.use(sanitizeInput);

// –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —á–∞—Å—Ç–∏
app.use('/modules', express.static(path.join(__dirname, '../client/modules')));
app.use('/pages', express.static(path.join(__dirname, '../client/pages')));
app.use('/assets', express.static(path.join(__dirname, '../client/assets')));

console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...');

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –≤ server-modular.js

// –ú–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü
app.get('/', (req, res) => {
  console.log('üìÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (/) - –º–æ–¥—É–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è');
  const filePath = path.join(__dirname, '../client/pages', 'login.html');
  console.log('üìÅ –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É:', filePath);
  
  res.sendFile(filePath, (err) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–∞:', err);
      res.status(500).send('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
    } else {
      console.log('‚úÖ –ú–æ–¥—É–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    }
  });
});

app.get('/index.html', (req, res) => {
  console.log('üìÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ index.html - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –º–æ–¥—É–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é');
  res.redirect('/');
});


// –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã - —Ç—Ä–µ–±—É—é—Ç —Ç–æ–∫–µ–Ω
app.get('/main', authenticatePage, addMenuPermissions, (req, res) => {
  console.log('üìÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (/main) –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', req.user ? req.user.login : '–Ω–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
  const filePath = path.join(__dirname, '../client/pages', 'main.html');
  res.sendFile(filePath, (err) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–æ–¥—É–ª—å–Ω–æ–π –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', err);
      res.status(500).send('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
    } else {
      console.log('‚úÖ –ú–æ–¥—É–ª—å–Ω–∞—è –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    }
  });
});


app.get('/users', authenticatePage, addMenuPermissions, (req, res) => {
  const userInfo = req.user ? req.user.login : '–Ω–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  console.log('üìÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (/users) –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userInfo);
  const filePath = path.join(__dirname, '../client/pages', 'users.html');
  res.sendFile(filePath, (err) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', err);
      res.status(500).send('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
    } else {
      console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    }
  });
});

app.get('/roles', authenticatePage, addMenuPermissions, (req, res) => {
  const userInfo = req.user ? req.user.login : '–Ω–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  console.log('üìÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–æ–ª–µ–π (/roles) –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userInfo);
  const filePath = path.join(__dirname, '../client/pages', 'roles.html');
  res.sendFile(filePath, (err) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä–æ–ª–µ–π:', err);
      res.status(500).send('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
    } else {
      console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä–æ–ª–µ–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    }
  });
});

app.get('/companies', authenticatePage, addMenuPermissions, (req, res) => {
  const userInfo = req.user ? req.user.login : '–Ω–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  console.log('üìÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ–º–ø–∞–Ω–∏–π (/companies) –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userInfo);
  const filePath = path.join(__dirname, '../client/pages', 'companies.html');
  res.sendFile(filePath, (err) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–æ–º–ø–∞–Ω–∏–π:', err);
      res.status(500).send('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
    } else {
      console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–º–ø–∞–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    }
  });
});

app.get('/pvz', authenticatePage, addMenuPermissions, (req, res) => {
  const userInfo = req.user ? req.user.login : '–Ω–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  console.log('üìÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ü–í–ó (/pvz) –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userInfo);
  const filePath = path.join(__dirname, '../client/pages', 'pvz.html');
  res.sendFile(filePath, (err) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ü–í–ó:', err);
      res.status(500).send('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
    } else {
      console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ü–í–ó –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    }
  });
});


app.get('/settings', authenticatePage, addMenuPermissions, (req, res) => {
  const userInfo = req.user ? req.user.login : '–Ω–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  console.log('üìÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ (/settings) –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userInfo);
  const filePath = path.join(__dirname, '../client/pages', 'settings.html');
  res.sendFile(filePath, (err) => {
    if (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫:', err);
      res.status(500).send('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
    } else {
      console.log('‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    }
  });
});








// –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º–∏ –≤–µ—Ä—Å–∏—è–º–∏
app.get('/test', authenticatePage, (req, res) => {
  const userInfo = req.user ? req.user.login : '–Ω–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
  console.log('üìÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (/test) –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userInfo);
  res.sendFile(path.join(__dirname, '../../public', 'test.html'));
});

app.get('/login-simple', (req, res) => {
  console.log('üìÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ —É–ø—Ä–æ—â–µ–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞ (/login-simple) - —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è');
  res.sendFile(path.join(__dirname, '../../public', 'login-simple.html'));
});

app.get('/main-simple', authenticatePage, (req, res) => {
  console.log('üìÑ –ó–∞–ø—Ä–æ—Å –Ω–∞ —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É (/main-simple) - —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è');
  res.sendFile(path.join(__dirname, '../../public', 'main-simple.html'));
});

// Health check endpoint –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
app.get('/health', (req, res) => {
  res.status(200).json({
    status: 'healthy',
    timestamp: new Date().toISOString(),
    uptime: process.uptime(),
    environment: process.env.NODE_ENV || 'development'
  });
});

// API –º–∞—Ä—à—Ä—É—Ç—ã —Å rate limiting
app.use('/api/auth', authLimiter, authRoutes);
app.use('/api/users', apiLimiter, usersRoutes);
app.use('/api/roles', apiLimiter, rolesRoutes);
app.use('/api/settings', apiLimiter, settingsRoutes);
app.use('/api/data', apiLimiter, dataRoutes);
app.use('/api/companies', apiLimiter, companiesRoutes);
app.use('/api/audit', apiLimiter, auditRoutes);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ 404 –æ—à–∏–±–æ–∫
app.use((req, res) => {
  res.status(404).json({ error: 'Endpoint not found' });
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
app.use((err, req, res, next) => {
  console.error('‚ùå –°–µ—Ä–≤–µ—Ä–Ω–∞—è –æ—à–∏–±–∫–∞:', err);
  res.status(500).json({ error: 'Internal server error' });
});

module.exports = app;
