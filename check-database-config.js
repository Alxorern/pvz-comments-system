/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */

const dbConfig = require('./database-config');

console.log('üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');

// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const dbInfo = dbConfig.getDatabaseInfo();

console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
console.log(`  –ü—É—Ç—å: ${dbInfo.path}`);
console.log(`  –°—É—â–µ—Å—Ç–≤—É–µ—Ç: ${dbInfo.exists ? '‚úÖ –î–ê' : '‚ùå –ù–ï–¢'}`);

if (dbInfo.exists) {
    console.log(`  –†–∞–∑–º–µ—Ä: ${dbInfo.sizeFormatted}`);
    console.log(`  –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ: ${dbInfo.lastModified}`);
}

console.log('\nüîç –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –ø—É—Ç–∏:');
Object.entries(dbConfig.alternativePaths).forEach(([name, path]) => {
    const fs = require('fs');
    const exists = fs.existsSync(path);
    const size = exists ? `${(fs.statSync(path).size / 1024).toFixed(2)} KB` : 'N/A';
    console.log(`  ${name}: ${path} ${exists ? `‚úÖ (${size})` : '‚ùå'}`);
});

console.log('\n‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
console.log(`üéØ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: ${dbConfig.getDatabasePath()}`);
